<%- include("../../includes/page-start.ejs", {pathToRootFolder: "../../", useHighlightJS: true}) %>
    <%- include("../../includes/header.ejs", {pathToRootFolder: "../../", activeLink: "documentation"}) %>
    <%- include("../../includes/documentation-page-start.ejs") %>
        <h1 class="u-mb-4">Project Code Box</h1>
        <p class="u-mb-4">ProjectCodeBox is designed to simulate a complete project by displaying the entire source code.</p>
        <h2 id="elements-of-project-code-box" class="u-mb-2">Elements of Project Code Box</h2>
        <p class="u-mb-2">In addition to code view and file elements (described <a href="#" class="link">here</a>), a project code box can also include folder structure configuration elements and commands. The following code sample shows what an element for a project code box might look like.</p>
        <%- include("./includes/project-code-box-elements.ejs") %>
        <h3 class="u-mb-1">Additional data attributes for code views and files</h3>
        <p class="u-mb-2">In addition to the attributes <span class="highlighted-text">data-cb-name</span>, <span class="highlighted-text">data-cb-active</span>, and <span class="highlighted-text">data-cb-file</span>, code views and files in a project code box can also contain the following data attributes.</p>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">data-cb-folder</th>
                    <td>Specifies the folder into which the code view or file should be placed.</td>
                </tr>
                <tr>
                    <th scope="row">data-cb-package</th>
                    <td>Specifies the package into which the code view or file is placed. If no value is provided, it is placed into the default package.</td>
                </tr>
            </tbody>
        </table>
        <p class="u-mb-4">In a project code box, it is acceptable to have multiple code views or files with the same <span class="highlighted-text">data-cb-name</span> attribute because the identifier is composed of both the folder and the name.</p>
        <h3 class="u-mb-1">Folder structure configuration</h3>
        <p class="u-mb-2">If the <span class="highlighted-text">data-cb-folder</span> attribute is used for a code view or file and the folder does not exist, it will be created. However, if you need to create folders that do not contain any content, you can use a folder structure configuration element. This element allows you to define a specific folder structure, as shown in the following example. The folder structure configuration element is marked with the <span class="highlighted-text">data-cb-folders</span> attribute. To have a folder opened on initialization, you can mark it with the <span class="highlighted-text">data-cb-opened</span> attribute.</p>
        <%- include("./includes/folder-structure-configuration-element.ejs") %>
        <h3 class="u-mb-1">Commands</h3>
        <p class="u-mb-2">A project code box can include a script element with commands to be executed, such as renaming a folder, removing a file, and so on. The script must have its type attribute set to application/json to prevent it from being executed. Commands are written as objects within an array in JSON format, as demonstrated in the following example. Each object should have a command property that specifies the type of command, along with other properties depending on the command type.</p>
        <%- include("./includes/commands-element.ejs") %>
        <h2 id="usage-example" class="u-mb-2">Usage Example</h2>
        <p class="u-mb-2">The following example demonstrates how to create a ProjectCodeBox. Simply instantiate the ProjectCodeBox class by passing a reference to the root element of code box. You can also provide additional options as a second parameter.</p>
        <%- include("./includes/create-project-code-box.ejs") %>
        <p class="u-mb-4">If you want to create multiple project code boxes, you can use the <a href="#" class="link">ProjectCodeBoxCreator</a>. For more information, refer to the chapter on <a href="#" class="link">creators</a>.</p>
        <h2 id="inheritance" class="u-mb-2">Inheritance</h2>
        <p class="u-mb-2">Project code boxes have the ability to inherit from other project code boxes. When creating an instance of a ProjectCodeBox, you can pass a parent project code box as the third parameter. The newly created project code box will inherit all code views, files, folders, and packages from its parent code box. Additionally, the new code box can add its own code views or files, delete some, or make other modifications as needed. The following example shows how to create a project code box that inherits from a parent code box.</p>
        <%- include("./includes/project-code-box-inheritance-example.ejs") %>
        <p class="u-mb-4">Most of the time, you will likely use <a href="#" class="link">ProjectCodeBoxCreator</a> to avoid manually creating each code box and redundantly specifying options.</p>
        <h3 class="u-mb-1">What is inherited</h3>
        <p class="u-mb-1">The following things are inherited:</p>
        <ul class="u-mb-4">
            <li>code views</li>
            <li>files</li>
            <li>folders</li>
            <li>packages</li>
            <li>folder path for packages</li>
            <li>project name</li>
            <li><a href="#" class="link">createFoldersForPackages</a> option</li>
            <li><a href="#" class="link">foldersDelimiterForPackages</a> option</li>
        </ul>
        <h3 class="u-mb-1">What is not inherited</h3>
        <p class="u-mb-1">The following things are not inherited:</p>
        <ul class="u-mb-4">
            <li>open/close state of panel</li>
            <li>open/close state of folders</li>
            <li>open/close state of packages</li>
            <li>highlights of code views</li>
        </ul>
        <h3 class="u-mb-1">Note on packages</h3>
        <p class="u-mb-4">The packages of overwritten code views and files are not changed unless a new package is explicitly assigned.</p>
        <h2 id="commands" class="u-mb-2">Commands</h2>
        <p class="u-mb-1">As mentioned previously, a project code box can include a script element with commands to be executed. The following commands are available:</p>
        <table class="contents-table u-mb-4">
            <thead style="display: none;">
                <tr>
                    <th>Command</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><a href="#" class="link">rename project</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">add folder</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">remove folder</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">rename folder</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">open folder</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">close folder</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">add package</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">remove package</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">rename package</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">open package</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">close package</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">remove code view</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">rename code view</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">move code view to folder</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">change code view package</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">remove code view package</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">remove all code views</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">add code view highlight</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">remove code view highlight</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">set active code view</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">set no active code view</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">remove file</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">rename file</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">move file to folder</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">change file package</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">remove file package</a></td>
                </tr>
                <tr>
                    <td><a href="#" class="link">remove all files</a></td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">rename project</h3>
        <p class="u-mb-2">Renames project.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">name <span class="properties-table__type">: string</span></th>
                    <td>New name.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">add folder</h3>
        <p class="u-mb-2">Creates new folder(s) (if not created yet).</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Folder path.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">remove folder</h3>
        <p class="u-mb-2">Removes folder and all its contents. This might also remove packages if their folders are removed (if generation of folders for packages is enabled via <a href="#" class="link">createFoldersForPackages</a> option).</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder that should be removed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">rename folder</h3>
        <p class="u-mb-2">Renames folder. This can also change (rename) folder for packages and rename packages.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder that should be renamed.</td>
                </tr>
                <tr>
                    <th scope="row">newName <span class="properties-table__type">: string</span></th>
                    <td>New name for folder.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">open folder</h3>
        <p class="u-mb-2">Opens folder.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder that should be opened.</td>
                </tr>
                <tr>
                    <th scope="row">openParentFolders <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether parent folders should also be opened (default = false).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">close folder</h3>
        <p class="u-mb-2">Closes folder.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder that should be closed.</td>
                </tr>
                <tr>
                    <th scope="row">closeChildFolders <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether subfolders should be closed too (default = false).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">add package</h3>
        <p class="u-mb-2">Creates new package (if it does not exist yet).</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">name <span class="properties-table__type">: string</span></th>
                    <td>Name of package.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">remove package</h3>
        <p class="u-mb-2">Removes package.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">name <span class="properties-table__type">: string</span></th>
                    <td>Package name.</td>
                </tr>
                <tr>
                    <th scope="row">removePackageFoldersAndContents <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether package folder and its contents should be removed (default = true).</td>
                </tr>
                <tr>
                    <th scope="row">removeAllCodeViewsAndFiles <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether all code views and files in package should be removed (default = false).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">rename package</h3>
        <p class="u-mb-2">Renames package. This can also rename folders for package if generation of folders is enabled via <a href="#" class="link">createFoldersForPackages</a> option.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">name <span class="properties-table__type">: string</span></th>
                    <td>Current package name.</td>
                </tr>
                <tr>
                    <th scope="row">newName <span class="properties-table__type">: string</span></th>
                    <td>New package name.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">open package</h3>
        <p class="u-mb-2">Opens package.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">name <span class="properties-table__type">?: string | null</span></th>
                    <td>Package name (null or undefined for default package).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">close package</h3>
        <p class="u-mb-2">Closes package.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">name <span class="properties-table__type">?: string | null</span></th>
                    <td>Package name (null or undefined for default package).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">remove code view</h3>
        <p class="u-mb-2">Removes code view from code box.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view to be removed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">rename code view</h3>
        <p class="u-mb-2">Changes file name of code view.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view to be renamed.</td>
                </tr>
                <tr>
                    <th scope="row">newName <span class="properties-table__type">: string</span></th>
                    <td>New file name.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">move code view to folder</h3>
        <p class="u-mb-2">Moves code view to folder (if folder does not exist, it is created; package is not changed).</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view.</td>
                </tr>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">change code view package</h3>
        <p class="u-mb-2">Changes package of code view.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view.</td>
                </tr>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">?: string | null</span></th>
                    <td>Package name (null and undefined for default package). If package does not exist, it is created.</td>
                </tr>
                <tr>
                    <th scope="row">keepFolderPath <span class="properties-table__type">: boolean</span></th>
                    <td>Determines whether code view should stay in the same folder (if false, code view can be moved to different folder based on package).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">remove code view package</h3>
        <p class="u-mb-2">Removes code view from package.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">remove all code views</h3>
        <p class="u-mb-4">Removes all code views from code box.</p>
        <h3 class="command-heading u-mb-1">add code view highlight</h3>
        <p class="u-mb-2">Adds new highlight to code view.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view.</td>
                </tr>
                <tr>
                    <th scope="row">start <span class="properties-table__type">: number</span></th>
                    <td>Start line of highlight.</td>
                </tr>
                <tr>
                    <th scope="row">end <span class="properties-table__type">?: number</span></th>
                    <td>End line of highlight (default is the same as start line).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">remove code view highlight</h3>
        <p class="u-mb-2">Removes highlights from code view based on specified range (all intersecting highlights are removed).</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view.</td>
                </tr>
                <tr>
                    <th scope="row">start <span class="properties-table__type">?: number | null</span></th>
                    <td>Start line (passing null or leaving it empty defaults to the first line).</td>
                </tr>
                <tr>
                    <th scope="row">end <span class="properties-table__type">?: number</span></th>
                    <td>End line (default is the same as start line; passing null defaults to the last line).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">set active code view</h3>
        <p class="u-mb-2">Sets code view as active (displays it in code box).</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view to be set as active.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">set no active code view</h3>
        <p class="u-mb-4">Displays no code view in code box.</p>
        <h3 class="command-heading u-mb-1">remove file</h3>
        <p class="u-mb-2">Removes file from code box.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file to be removed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">rename file</h3>
        <p class="u-mb-2">Changes name of file.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file to be renamed.</td>
                </tr>
                <tr>
                    <th scope="row">newName <span class="properties-table__type">: string</span></th>
                    <td>New file name.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">move file to folder</h3>
        <p class="u-mb-2">Moves file to folder (if folder does not exist, it is created; package is not changed).</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file.</td>
                </tr>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">change file package</h3>
        <p class="u-mb-2">Changes package of file.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file.</td>
                </tr>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">?: string | null</span></th>
                    <td>Package name (null and undefined for default package). If package does not exist, it is created.</td>
                </tr>
                <tr>
                    <th scope="row">keepFolderPath <span class="properties-table__type">: boolean</span></th>
                    <td>Determines whether file should stay in the same folder (if false, file can be moved to different folder based on package).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">remove file package</h3>
        <p class="u-mb-2">Removes file from package.</p>
        <h4 class="u-mb-1">Properties</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="command-heading u-mb-1">remove all files</h3>
        <p class="u-mb-4">Removes all files from code box.</p>
        <h2 id="options" class="heading-secondary u-mb-2">Options</h2>
        <p class="u-mb-1">ProjectCodeBox accepts the following options and all options from the base CodeBox class.</p>
        <table class="contents-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row" colspan="2"><a href="#" class="link">...all options from CodeBox class</a></th>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">svgSpritePath</a></th>
                    <td>Specifies path to the SVG sprite that contains icons.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">svgSpriteIcons</a></th>
                    <td>Specifies names of the icons in the SVG sprite.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">folderStructureHeading</a></th>
                    <td>Specifies folder structure heading.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">packagesHeading</a></th>
                    <td>Specifies packages heading.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">projectName</a></th>
                    <td>Specifies name of project.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">packagesFolderPath</a></th>
                    <td>Specifies path to folder for packages.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">defaultPackageName</a></th>
                    <td>Specifies name under which the default package should be displayed.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">createFoldersForPackages</a></th>
                    <td>Specifies whether folders should be created for packages.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">foldersDelimiterForPackages</a></th>
                    <td>Specifies delimiter to be used when creating folders for packages.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">folderAnimationSpeed</a></th>
                    <td>Specifies speed of folder open/close animation.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">folderAnimationEasingFunction</a></th>
                    <td>Specifies CSS easing function for folder open/close animation.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">openActiveCodeViewFolderOnInit</a></th>
                    <td>Specifies whether folder and its parent folders containing the active code view should be opened on initialization.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">openActiveCodeViewPackageOnInit</a></th>
                    <td>Specifies whether package containing the active code view should be opened on initialization.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link" style="word-break: break-all;">preventActiveCodeViewFolderOpenOnInitIfPackage</a></th>
                    <td>Specifies whether the folder and its parent folders containing the active code view should not be opened on initialization when the code view is within a package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">openRootFolderOnInit</a></th>
                    <td>Specifies whether the project (root) folder should be opened on initialization.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">openPanelOnInit</a></th>
                    <td>Specifies whether the side panel should be opened on initialization.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">closePanelOnCodeViewSelect</a></th>
                    <td>Specifies whether the side panel should be closed when code view is selected by clicking on its button.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">openPanelButtonAriaLabel</a></th>
                    <td>Specifies value of the panel open/close button aria-label attribute when panel is closed.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">closePanelButtonAriaLabel</a></th>
                    <td>Specifies value of the panel open/close button aria-label attribute when panel is opened.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">svgSpritePath</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">undefined</span></p>
        <p class="u-mb-4">Specifies path to the SVG sprite that contains icons.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">svgSpriteIcons</span> <span class="option-heading__type">: object</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">{}</span></p>
        <p>Specifies names of the icons in the SVG sprite in a form of object with the following properties:</p>
        <ul class="u-mb-2">
            <li><span class="highlighted-text">codeFile</span> - name of icon for code view button</li>
            <li><span class="highlighted-text">file</span> - name of icon for file button</li>
            <li><span class="highlighted-text">download</span> - name of icon that is displayed for button of downloadable file</li>
            <li><span class="highlighted-text">panelOpenButton</span> - name of icon for panel open/close button</li>
            <li><span class="highlighted-text">folderArrow</span> - name of icon for folder arrow</li>
            <li><span class="highlighted-text">folder</span> - name of icon for folder</li>
            <li><span class="highlighted-text">project</span> - name of icon for project (root) folder</li>
            <li><span class="highlighted-text">package</span> - name of icon for package</li>
        </ul>
        <%- include("./includes/sprite-icons-option.ejs") %>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">folderStructureHeading</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">"Folder structure"</span></p>
        <p class="u-mb-4">Specifies folder structure heading.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">packagesHeading</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">"Packages"</span></p>
        <p class="u-mb-4">Specifies packages heading.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">projectName</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">"unnamed"</span></p>
        <p class="u-mb-4">Specifies the name of project (root) folder. This option is not used if the code box has parent code box.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">packagesFolderPath</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">"/"</span></p>
        <p class="u-mb-4">Specifies path to folder for packages. This option is not used if the code box has parent code box.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">defaultPackageName</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">"default"</span></p>
        <p class="u-mb-4">Specifies name under which the default package should be displayed.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">createFoldersForPackages</span> <span class="option-heading__type">: boolean</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">true</span></p>
        <p class="u-mb-4">Specifies whether folders should be created for packages. This option is not used if the code box has parent code box.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">foldersDelimiterForPackages</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">undefined</span></p>
        <p class="u-mb-4">Specifies delimiter to be used when creating folders for packages. For example, if the delimiter is "." and the package name is "io.github.jirkasa", folders "io/github/jirkasa" are created. This option is not used if the code box has a parent code box.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">folderAnimationSpeed</span> <span class="option-heading__type">: number</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">200</span></p>
        <p class="u-mb-4">Specifies speed of folder open/close animation (in milliseconds).</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">folderAnimationEasingFunction</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">"ease-in-out"</span></p>
        <p class="u-mb-4">Specifies CSS easing function for folder open/close animation.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">openActiveCodeViewFolderOnInit</span> <span class="option-heading__type">: boolean</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">true</span></p>
        <p class="u-mb-4">Specifies whether folder and its parent folders containing the active code view should be opened on initialization.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">openActiveCodeViewPackageOnInit</span> <span class="option-heading__type">: boolean</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">true</span></p>
        <p class="u-mb-4">Specifies whether package containing the active code view should be opened on initialization.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">preventActiveCodeViewFolderOpenOnInitIfPackage</span> <span class="option-heading__type">: boolean</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">false</span></p>
        <p class="u-mb-4">Specifies whether the folder and its parent folders containing the active code view should not be opened on initialization when the code view is within a package. This option overrides openActiveCodeViewFolderOnInit when set to true and the active code view is within a package.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">openRootFolderOnInit</span> <span class="option-heading__type">: boolean</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">true</span></p>
        <p class="u-mb-4">Specifies whether the project (root) folder should be opened on initialization. This option has effect only in certain situations (openActiveCodeViewFolderOnInit option takes precedence).</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">openPanelOnInit</span> <span class="option-heading__type">: boolean</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">false</span></p>
        <p class="u-mb-4">Specifies whether the side panel should be opened on initialization.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">closePanelOnCodeViewSelect</span> <span class="option-heading__type">: boolean</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">true</span></p>
        <p class="u-mb-4">Specifies whether the side panel should be closed when code view is selected by clicking on its button.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">openPanelButtonAriaLabel</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">"Open panel"</span></p>
        <p class="u-mb-4">Specifies value of the panel open/close button aria-label attribute when panel is closed.</p>
        <h3 class="option-heading u-mb-1"><span class="option-heading__name">closePanelButtonAriaLabel</span> <span class="option-heading__type">: string</span></h3>
        <p class="option-info u-mb-2">Default value: <span class="option-info__value">"Close panel"</span></p>
        <p class="u-mb-4">Specifies value of the panel open/close button aria-label attribute when panel is opened.</p>
        <h2 id="methods" class="u-mb-2">Methods</h2>
        <p class="u-mb-1">ProjectCodeBox has the following methods. Many of these methods are also described in the <a href="#" class="link">chapter about the base CodeBox class</a>. However, some of them have a return type that is a subclass of <a href="#" class="link">CodeBoxCodeView</a> or <a href="#" class="link">CodeBoxFile</a> - specifically, <a href="#" class="link">ProjectCodeBoxCodeView</a> or <a href="#" class="link">ProjectCodeBoxFile</a>. For clarity, these methods are also listed in this chapter.</p>
        <table class="contents-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><a href="#" class="link">appendTo</a></th>
                    <td>Appends code box to element.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">detach</a></th>
                    <td>Detaches code box from its parent element.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">init</a></th>
                    <td>Initializes code box if it hasn't been initialized yet.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">isInitialized</a></th>
                    <td>Checks whether the code box is initialized.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">addOnInitListener</a></th>
                    <td>Registeres function to be called when code box is initialized.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">addCodeView</a></th>
                    <td>Adds new code view to code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getCodeViews</a></th>
                    <td>Returns all code views of code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getCodeViewsByFolderPath</a></th>
                    <td>Returns code views in folder.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getCodeViewsByPackage</a></th>
                    <td>Returns code views in package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getCodeView</a></th>
                    <td>Returns code view based on identifier.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getCodeViewByFolderPath</a></th>
                    <td>Returns code view based on folder path and name.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getCodeViewByPackage</a></th>
                    <td>Returns code view based on package and name.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">removeCodeView</a></th>
                    <td>Removes code view from code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">removeAllCodeViews</a></th>
                    <td>Removes all code views from code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">changeCodeViewIdentifier</a></th>
                    <td>Changes identifier of code view in code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">changeCodeViewPackage</a></th>
                    <td>Changes package of code view.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">removeCodeViewPackage</a></th>
                    <td>Removes code view from package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getCodeViewPackage</a></th>
                    <td>Returns package of code view.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">setActiveCodeView</a></th>
                    <td>Sets code view as active (displays it in code box).</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">setNoActiveCodeView</a></th>
                    <td>Displays no code view in code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getActiveCodeView</a></th>
                    <td>Returns currently active code view.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">addFile</a></th>
                    <td>Adds new file to code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getFiles</a></th>
                    <td>Returns all files of code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getFilesByFolderPath</a></th>
                    <td>Returns files in folder.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getFilesByPackage</a></th>
                    <td>Returns files in package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getFile</a></th>
                    <td>Returns file based on identifier.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getFileByFolderPath</a></th>
                    <td>Returns files based on folder path and name.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getFileByPackage</a></th>
                    <td>Returns file based on package and name.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">removeFile</a></th>
                    <td>Removes file from code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">removeAllFiles</a></th>
                    <td>Removes all files from code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">changeFileIdentifier</a></th>
                    <td>Changes identifier of file in code box.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">changeFilePackage</a></th>
                    <td>Changes package of file.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">removeFilePackage</a></th>
                    <td>Removes file from package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getFilePackage</a></th>
                    <td>Returns package of file.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">changeFileDownloadLink</a></th>
                    <td>Changes download link of file.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">addFolder</a></th>
                    <td>Creates new folder(s).</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">removeFolder</a></th>
                    <td>Removes folder and all its contents.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">renameFolder</a></th>
                    <td>Renames folder.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">openFolder</a></th>
                    <td>Opens folder.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">closeFolder</a></th>
                    <td>Closes folder.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">folderExists</a></th>
                    <td>Checks whether folder exists.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">isFolderOpened</a></th>
                    <td>Checks whether folder is opened.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getSubfolderNames</a></th>
                    <td>Returns names of folder subfolders.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">addPackage</a></th>
                    <td>Creates new package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">removePackage</a></th>
                    <td>Removes package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">renamePackage</a></th>
                    <td>Renames package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">openPackage</a></th>
                    <td>Opens package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">closePackage</a></th>
                    <td>Closes package.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">packageExists</a></th>
                    <td>Checks whether package exists.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">isPackageOpened</a></th>
                    <td>Checks whether package is opened.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getPackages</a></th>
                    <td>Returns all packages.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getPackagesFolderPath</a></th>
                    <td>Returns path to folder that is currently used for packages.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">changePackagesFolderPathAndRemoveAll</a></th>
                    <td>Sets new folder path for packages and removes all code views, files, folders and packages.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">getProjectName</a></th>
                    <td>Returns project name.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">setProjectName</a></th>
                    <td>Sets new project name.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">openPanel</a></th>
                    <td>Opens panel.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">closePanel</a></th>
                    <td>Closes panel.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">isPanelOpened</a></th>
                    <td>Checks whether panel is opened.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">reset</a></th>
                    <td>Resets code box to its post-initialization state.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">createMemento</a></th>
                    <td>Creates memento.</td>
                </tr>
                <tr>
                    <th scope="row"><a href="#" class="link">applyMemento</a></th>
                    <td>Applies memento.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">appendTo</h3>
        <p class="method-signature u-mb-2">appendTo(element: <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement" target="_blank" class="method-signature__link">HTMLElement</a>): void</p>
        <p class="u-mb-2">Appends code box to element.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">element <span class="properties-table__type">: <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement" target="_blank" class="properties-table__type-link">HTMLElement</a></span></th>
                    <td>Element to append code box to.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">detach</h3>
        <p class="method-signature u-mb-2">detach(): void</p>
        <p class="u-mb-4">Detaches code box from its parent element.</p>
        <h3 class="method-heading u-mb-1">init</h3>
        <p class="method-signature u-mb-2">init(): void</p>
        <p class="u-mb-4">Initializes code box if it hasn't been initialized yet. When lazy initialization is disabled, the code box is initialized immediately after it is created.</p>
        <h3 class="method-heading u-mb-1">isInitialized</h3>
        <p class="method-signature u-mb-2">isInitialized(): boolean</p>
        <p class="u-mb-2">Checks whether the code box is initialized.</p>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether the code box is initialized.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">addOnInitListener</h3>
        <p class="method-signature u-mb-2">addOnInitListener(callback: () => void): void</p>
        <p class="u-mb-2">Registeres function to be called when code box is initialized.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">callback <span class="properties-table__type">: () => void</span></th>
                    <td>Function to be called after initialization of code box.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">addCodeView</h3>
        <p class="method-signature u-mb-2">addCodeView(identifier: string, codeView: CodeView): boolean</p>
        <p class="u-mb-2">Adds new code view to code box (copy of passed code view is made).</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier under which the code view should be added to code box.</td>
                </tr>
                <tr>
                    <th scope="row">codeView <span class="properties-table__type">: <a href="#" class="properties-table__type-link">CodeView</a></span></th>
                    <td>Code view.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether code view has been successfully added.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getCodeViews</h3>
        <p class="method-signature u-mb-2">getCodeViews(): <a href="#" class="method-signature__link">ProjectCodeBoxCodeView</a>[]</p>
        <p class="u-mb-2">Returns all code views of code box.</p>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxCodeView</a>[]</span></th>
                    <td>Code views.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getCodeViewsByFolderPath</h3>
        <p class="method-signature u-mb-2">getCodeViewsByFolderPath(folderPath: string, includeSubfolders: boolean = false): <a href="#" class="method-signature__link">ProjectCodeBoxCodeView</a>[]</p>
        <p class="u-mb-2">Returns code views in folder.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Folder path.</td>
                </tr>
                <tr>
                    <th scope="row">includeSubfolders <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether code views in subfolders should also be included.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxCodeView</a>[]</span></th>
                    <td>Code views.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getCodeViewsByPackage</h3>
        <p class="method-signature u-mb-2">getCodeViewsByPackage(packageName : string | null): <a href="#" class="method-signature__link">ProjectCodeBoxCodeView</a>[]</p>
        <p class="u-mb-2">Returns code views in package.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string | null</span></th>
                    <td>Package name or null for default package.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxCodeView</a>[]</span></th>
                    <td>Code views.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getCodeView</h3>
        <p class="method-signature u-mb-2">getCodeView(identifier: string): <a href="#" class="method-signature__link">ProjectCodeBoxCodeView</a> | null</p>
        <p class="u-mb-2">Returns code view based on identifier.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxCodeView</a> | null</span></th>
                    <td>Code view or null if code view wasn't found.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getCodeViewByFolderPath</h3>
        <p class="method-signature u-mb-2">getCodeViewByFolderPath(folderPath: string, fileName: string): <a href="#" class="method-signature__link">ProjectCodeBoxCodeView</a> | null</p>
        <p class="u-mb-2">Returns code view based on folder path and name.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Folder path.</td>
                </tr>
                <tr>
                    <th scope="row">fileName <span class="properties-table__type">: string</span></th>
                    <td>Name of code view.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxCodeView</a> | null</span></th>
                    <td>Code view or null if code view wasn't found.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getCodeViewByPackage</h3>
        <p class="method-signature u-mb-2">getCodeViewByPackage(packageName: string | null, fileName: string): <a href="#" class="method-signature__link">ProjectCodeBoxCodeView</a> | null</p>
        <p class="u-mb-2">Returns code view based on package and name.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string | null</span></th>
                    <td>Package name or null for default package.</td>
                </tr>
                <tr>
                    <th scope="row">fileName <span class="properties-table__type">: string</span></th>
                    <td>Name of code view.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxCodeView</a> | null</span></th>
                    <td>Code view or null if code view wasn't found.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">removeCodeView</h3>
        <p class="method-signature u-mb-2">removeCodeView(identifier: string): boolean</p>
        <p class="u-mb-2">Removes code view from code box.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view to be removed.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether code view has been removed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">removeAllCodeViews</h3>
        <p class="method-signature u-mb-2">removeAllCodeViews(): void</p>
        <p class="u-mb-4">Removes all code views from code box.</p>
        <h3 class="method-heading u-mb-1">changeCodeViewIdentifier</h3>
        <p class="method-signature u-mb-2">changeCodeViewIdentifier(identifier: string, newIdentifier: string): boolean</p>
        <p class="u-mb-2">Changes identifier of code view in code box. It can change folder path and name of code view but it never changes package of code view.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view whose identifier should be changed.</td>
                </tr>
                <tr>
                    <th scope="row">newIdentifier <span class="properties-table__type">: string</span></th>
                    <td>New identifier.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether change has been successfully completed (if passed new identifier already belongs to some other code view in code box, it returns false).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">changeCodeViewPackage</h3>
        <p class="method-signature u-mb-2">changeCodeViewPackage(identifier: string, packageName: string | null, keepFolderPath: boolean): boolean</p>
        <p class="u-mb-2">Changes package of code view.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view whose package should be changed.</td>
                </tr>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string | null</span></th>
                    <td>Package name or null for default package. If package does not exist, it is created.</td>
                </tr>
                <tr>
                    <th scope="row">keepFolderPath <span class="properties-table__type">: boolean</span></th>
                    <td>Determines whether code view should stay in the same folder (if false, code view can be moved to different folder based on package).</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether change has been successfully completed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">removeCodeViewPackage</h3>
        <p class="method-signature u-mb-2">removeCodeViewPackage(identifier: string): boolean</p>
        <p class="u-mb-2">Removes code view from package.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view that should be removed from package.</td>
                </tr>
                <tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether code view has been successfully removed from package.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getCodeViewPackage</h3>
        <p class="method-signature u-mb-2">getCodeViewPackage(identifier: string): string | null | undefined</p>
        <p class="u-mb-2">Returns package of code view.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view.</td>
                </tr>
                <tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">string | null | undefined</span></th>
                    <td>Package of code view. If null is returned, code view belongs to default package. If undefined is returned, code view doesn't belong to any package or does not event exist.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">setActiveCodeView</h3>
        <p class="method-signature u-mb-2">setActiveCodeView(identifier: string): boolean</p>
        <p class="u-mb-2">Sets code view as active (displays it in code box).</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of code view which should be set as active.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether code view was found and has been successfully set as active.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">setNoActiveCodeView</h3>
        <p class="method-signature u-mb-2">setNoActiveCodeView(): void</p>
        <p class="u-mb-4">Displays no code view in code box.</p>
        <h3 class="method-heading u-mb-1">getActiveCodeView</h3>
        <p class="method-signature u-mb-2">getActiveCodeView(): <a href="#" class="method-signature__link">ProjectCodeBoxCodeView</a> | null</p>
        <p class="u-mb-2">Returns currently active code view.</p>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="method-signature__link">ProjectCodeBoxCodeView</a> | null</span></th>
                    <td>Active code view or null if no code view is set as active.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">addFile</h3>
        <p class="method-signature u-mb-2">addFile(identifier: string, downloadLink: string | null): boolean</p>
        <p class="u-mb-2">Adds new file to code box.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier under which the file should be added to code box.</td>
                </tr>
                <tr>
                    <th scope="row">downloadLink <span class="properties-table__type">: string | null</span></th>
                    <td>Download link or null if file should not be downloadable.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether file has been successfully added.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getFiles</h3>
        <p class="method-signature u-mb-2">getFiles(): <a href="#" class="method-signature__link">ProjectCodeBoxFile</a>[]</p>
        <p class="u-mb-2">Returns all files of code box.</p>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxFile</a>[]</span></th>
                    <td>Files.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getFilesByFolderPath</h3>
        <p class="method-signature u-mb-2">getFilesByFolderPath(folderPath: string, includeSubfolders: boolean = false): <a href="#" class="method-signature__link">ProjectCodeBoxFile</a>[]</p>
        <p class="u-mb-2">Returns files in folder.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Folder path.</td>
                </tr>
                <tr>
                    <th scope="row">includeSubfolders <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether files in subfolders should also be included.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxFile</a>[]</span></th>
                    <td>Files.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getFilesByPackage</h3>
        <p class="method-signature u-mb-2">getFilesByPackage(packageName : string | null): <a href="#" class="method-signature__link">ProjectCodeBoxFile</a>[]</p>
        <p class="u-mb-2">Returns files in package.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string | null</span></th>
                    <td>Package name or null for default package.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxFile</a>[]</span></th>
                    <td>Files.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getFile</h3>
        <p class="method-signature u-mb-2">getFile(identifier: string): <a href="#" class="method-signature__link">ProjectCodeBoxFile</a> | null</p>
        <p class="u-mb-2">Returns file based on identifier.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxFile</a> | null</span></th>
                    <td>File or null if file wasn't found.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getFileByFolderPath</h3>
        <p class="method-signature u-mb-2">getFileByFolderPath(folderPath: string, fileName: string): <a href="#" class="method-signature__link">ProjectCodeBoxFile</a> | null</p>
        <p class="u-mb-2">Returns file based on folder path and name.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Folder path.</td>
                </tr>
                <tr>
                    <th scope="row">fileName <span class="properties-table__type">: string</span></th>
                    <td>Name of file.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxFile</a> | null</span></th>
                    <td>File or null if file wasn't found.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getFileByPackage</h3>
        <p class="method-signature u-mb-2">getFileByPackage(packageName: string | null, fileName: string): <a href="#" class="method-signature__link">ProjectCodeBoxFile</a> | null</p>
        <p class="u-mb-2">Returns file based on package and name.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string | null</span></th>
                    <td>Package name or null for default package.</td>
                </tr>
                <tr>
                    <th scope="row">fileName <span class="properties-table__type">: string</span></th>
                    <td>Name of file.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">ProjectCodeBoxFile</a> | null</span></th>
                    <td>File or null if file wasn't found.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">removeFile</h3>
        <p class="method-signature u-mb-2">removeFile(identifier: string): boolean</p>
        <p class="u-mb-2">Removes file from code box.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file to be removed.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether file has been removed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">removeAllFiles</h3>
        <p class="method-signature u-mb-2">removeAllFiles(): void</p>
        <p class="u-mb-4">Removes all files from code box.</p>
        <h3 class="method-heading u-mb-1">changeFileIdentifier</h3>
        <p class="method-signature u-mb-2">changeFileIdentifier(identifier: string, newIdentifier: string): boolean</p>
        <p class="u-mb-2">Changes identifier of file in code box. It can change folder path and name of file but it never changes package of file.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Indentifier of file whose identifier should be changed.</td>
                </tr>
                <tr>
                    <th scope="row">newIdentifier <span class="properties-table__type">: string</span></th>
                    <td>New identifier.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether change has been successfully completed (if passed new identifier already belongs to some other file in code box, it returns false).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">changeFilePackage</h3>
        <p class="method-signature u-mb-2">changeFilePackage(identifier: string, packageName: string | null, keepFolderPath: boolean): boolean</p>
        <p class="u-mb-2">Changes package of file.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file whose package should be changed.</td>
                </tr>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string | null</span></th>
                    <td>Package name or null for default package. If package does not exist, it is created.</td>
                </tr>
                <tr>
                    <th scope="row">keepFolderPath <span class="properties-table__type">: boolean</span></th>
                    <td>Determines whether file should stay in the same folder (if false, file can be moved to different folder based on package).</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether change has been successfully completed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">removeFilePackage</h3>
        <p class="method-signature u-mb-2">removeFilePackage(identifier: string): boolean</p>
        <p class="u-mb-2">Removes file from package.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file that should be removed from package.</td>
                </tr>
                <tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether file has been successfully removed from package.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getFilePackage</h3>
        <p class="method-signature u-mb-2">getFilePackage(identifier: string): string | null | undefined</p>
        <p class="u-mb-2">Returns package of file.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file.</td>
                </tr>
                <tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">string | null | undefined</span></th>
                    <td>Package of file. If null is returned, file belongs to default package. If undefined is returned, file doesn't belong to any package or does not event exist.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">changeFileDownloadLink</h3>
        <p class="method-signature u-mb-2">changeFileDownloadLink(identifier: string, newDownloadLink: string | null): boolean</p>
        <p class="u-mb-2">Changes download link of file.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">identifier <span class="properties-table__type">: string</span></th>
                    <td>Identifier of file whose download link should be changed.</td>
                </tr>
                <tr>
                    <th scope="row">newDownloadLink <span class="properties-table__type">: string | null</span></th>
                    <td>Download link (or null if file should not be downloadable).</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether file was found and its download link has been successfully changed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">addFolder</h3>
        <p class="method-signature u-mb-2">addFolder(folderPath: string): void</p>
        <p class="u-mb-2">Creates new folder(s) (if not created yet).</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Folder path.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">removeFolder</h3>
        <p class="method-signature u-mb-2">removeFolder(folderPath: string): boolean</p>
        <p class="u-mb-2">Removes folder and all its contents. This might also remove packages if their folders are removed (if generation of folders for packages is enabled via <a href="#" class="link">createFoldersForPackages</a> option).</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder that should be removed.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether folder has been successfully removed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">renameFolder</h3>
        <p class="method-signature u-mb-2">renameFolder(folderPath: string, newName: string): boolean</p>
        <p class="u-mb-2">Renames folder. This can also change (rename) folder for packages and rename packages.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder that should be renamed.</td>
                </tr>
                <tr>
                    <th scope="row">newName <span class="properties-table__type">: string</span></th>
                    <td>New name for folder.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether folder has been successfully renamed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">openFolder</h3>
        <p class="method-signature u-mb-2">openFolder(folderPath: string, openParentFolders: boolean = false, animate: boolean = true): void</p>
        <p class="u-mb-2">Opens folder.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder that should be opened.</td>
                </tr>
                <tr>
                    <th scope="row">openParentFolders <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether parent folders should also be opened.</td>
                </tr>
                <tr>
                    <th scope="row">animate <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether animation should be used.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">closeFolder</h3>
        <p class="method-signature u-mb-2">closeFolder(folderPath: string, closeChildFolders: boolean = false, animate: boolean = true): void</p>
        <p class="u-mb-2">Closes folder.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder that should be closed.</td>
                </tr>
                <tr>
                    <th scope="row">closeChildFolders <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether subfolders should be closed too.</td>
                </tr>
                <tr>
                    <th scope="row">animate <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether animation should be used.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">folderExists</h3>
        <p class="method-signature u-mb-2">folderExists(folderPath: string): boolean</p>
        <p class="u-mb-2">Checks whether folder exists.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether folder exists.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">isFolderOpened</h3>
        <p class="method-signature u-mb-2">isFolderOpened(folderPath: string): boolean</p>
        <p class="u-mb-2">Checks whether folder is opened.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether folder is opened (false might also be returned if folder does not exist).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getSubfolderNames</h3>
        <p class="method-signature u-mb-2">getSubfolderNames(folderPath: string): string[] | null</p>
        <p class="u-mb-2">Returns names of folder subfolders (only direct subfolders).</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">folderPath <span class="properties-table__type">: string</span></th>
                    <td>Path to folder.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">string[] | null</span></th>
                    <td>Names of subfolders or null if folder does not exist.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">addPackage</h3>
        <p class="method-signature u-mb-2">addPackage(name: string): void</p>
        <p class="u-mb-2">Creates new package (if it does not exist yet).</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">name <span class="properties-table__type">: string</span></th>
                    <td>Name of package.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">removePackage</h3>
        <p class="method-signature u-mb-2">removePackage(name: string, removePackageFoldersAndContents: boolean = true, removeAllCodeViewsAndFiles: boolean = false): boolean</p>
        <p class="u-mb-2">Removes package.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">name <span class="properties-table__type">: string</span></th>
                    <td>Package name.</td>
                </tr>
                <tr>
                    <th scope="row">removePackageFoldersAndContents <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether package folder and its contents should be removed.</td>
                </tr>
                <tr>
                    <th scope="row">removeAllCodeViewsAndFiles <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether all code views and files in package should be removed.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether package has been successfully removed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">renamePackage</h3>
        <p class="method-signature u-mb-2">renamePackage(name: string, newName: string): boolean</p>
        <p class="u-mb-2">Renames package. This can also rename folders for package if generation of folders is enabled via <a href="#" class="link">createFoldersForPackages</a> option.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">name <span class="properties-table__type">: string</span></th>
                    <td>Current package name.</td>
                </tr>
                <tr>
                    <th scope="row">newName <span class="properties-table__type">: string</span></th>
                    <td>New package name.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether package has been successfully renamed.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">openPackage</h3>
        <p class="method-signature u-mb-2">openPackage(packageName: string | null, animate: boolean = true): void</p>
        <p class="u-mb-2">Opens package.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string | null</span></th>
                    <td>Package name or null for default package.</td>
                </tr>
                <tr>
                    <th scope="row">animate <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether animation should be used.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">closePackage</h3>
        <p class="method-signature u-mb-2">closePackage(packageName: string | null, animate: boolean = true): void</p>
        <p class="u-mb-2">Closes package.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string | null</span></th>
                    <td>Package name or null for default package.</td>
                </tr>
                <tr>
                    <th scope="row">animate <span class="properties-table__type">?: boolean</span></th>
                    <td>Determines whether animation should be used.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">packageExists</h3>
        <p class="method-signature u-mb-2">packageExists(packageName: string): boolean</p>
        <p class="u-mb-2">Checks whether package exists.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string</span></th>
                    <td>Package name.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether package exists.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">isPackageOpened</h3>
        <p class="method-signature u-mb-2">isPackageOpened(packageName: string | null): boolean</p>
        <p class="u-mb-2">Checks whether package is opened.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-2">
            <tbody>
                <tr>
                    <th scope="row">packageName <span class="properties-table__type">: string | null</span></th>
                    <td>Package name or null for default package.</td>
                </tr>
            </tbody>
        </table>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether package is opened (false might also be returned if package does not exist).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getPackages</h3>
        <p class="method-signature u-mb-2">getPackages(): string[]</p>
        <p class="u-mb-2">Returns all packages.</p>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">string[]</span></th>
                    <td>Packages (package names).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getPackagesFolderPath</h3>
        <p class="method-signature u-mb-2">getPackagesFolderPath(): string</p>
        <p class="u-mb-2">Returns path to folder that is currently used for packages.</p>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">string</span></th>
                    <td>Path to folder that is currently used for packages.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">changePackagesFolderPathAndRemoveAll</h3>
        <p class="method-signature u-mb-2">changePackagesFolderPathAndRemoveAll(newPackagesFolderPath: string): void</p>
        <p class="u-mb-2">Sets new folder path for packages and removes all code views, files, folders and packages (everything needs to be removed, when folder path for packages is changed).</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">newPackagesFolderPath <span class="properties-table__type">: string</span></th>
                    <td>New folder path for packages.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">getProjectName</h3>
        <p class="method-signature u-mb-2">getProjectName(): string</p>
        <p class="u-mb-2">Returns project name.</p>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">string</span></th>
                    <td>Project name.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">setProjectName</h3>
        <p class="method-signature u-mb-2">setProjectName(newName: string): void</p>
        <p class="u-mb-2">Sets new project name.</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row">newName <span class="properties-table__type">: string</span></th>
                    <td>New project name.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">openPanel</h3>
        <p class="method-signature u-mb-2">openPanel(): void</p>
        <p class="u-mb-4">Opens panel.</p>
        <h3 class="method-heading u-mb-1">closePanel</h3>
        <p class="method-signature u-mb-2">closePanel(): void</p>
        <p class="u-mb-4">Closes panel.</p>
        <h3 class="method-heading u-mb-1">isPanelOpened</h3>
        <p class="method-signature u-mb-2">isPanelOpened(): boolean</p>
        <p class="u-mb-2">Checks whether panel is opened.</p>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type">boolean</span></th>
                    <td>Indicates whether panel is opened.</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">reset</h3>
        <p class="method-signature u-mb-2">reset(): void</p>
        <p class="u-mb-4">Resets code box to its post-initialization state.</p>
        <h3 class="method-heading u-mb-1">createMemento</h3>
        <p class="method-signature u-mb-2">createMemento(): <a href="#" class="method-signature__link">CodeBoxMemento</a></p>
        <p class="u-mb-2">Creates memento (saved state of code box).</p>
        <h4 class="u-mb-1">Returns</h4>
        <table class="properties-table u-mb-4">
            <tbody>
                <tr>
                    <th scope="row"><span class="properties-table__type"><a href="#" class="properties-table__type-link">CodeBoxMemento</a></span></th>
                    <td>Memento (saved state of code box).</td>
                </tr>
            </tbody>
        </table>
        <h3 class="method-heading u-mb-1">applyMemento</h3>
        <p class="method-signature u-mb-2">applyMemento(memento: <a href="#" class="method-signature__link">CodeBoxMemento</a>): void</p>
        <p class="u-mb-2">Applies memento (sets code box to the state defined by the provided memento).</p>
        <h4 class="u-mb-1">Params</h4>
        <table class="properties-table">
            <tbody>
                <tr>
                    <th scope="row">memento <span class="properties-table__type">: <a href="#" class="properties-table__type-link">CodeBoxMemento</a></span></th>
                    <td>Memento (saved state of code box).</td>
                </tr>
            </tbody>
        </table>
    <%- include("../../includes/documentation-page-end.ejs", {pathToRootFolder: "../../", activeLink: "project-code-box"}) %>
    <%- include("../../includes/footer.ejs") %>
<%- include("../../includes/page-end.ejs") %>


<!-- 
X - úvod
X - elements of project code box
    - vysvětlit další data atributy, odkázat na část o code boxu a jen ukázat že to může obsahovat i folder structure konfiguraci a příkazy
X - usage example
X - inheritance
    - tam popíšu ten třetí parametr
X - folder structure configuration
X - commands
    - možná tady ty dvě části - nevysvětlovat to tam, ale vysvětlit to v elements of project code box - byly by tam na to podsekce
        - asi jo, a tady v části commands bych popsal všechny ty commandy
X - options
    - než se do toho pustím, tak ještě dodělat tu jednu option
X - methods
-->



<!-- 
Ok, takže Code Box
- úvod - napsat, že knihovna nabízí moméntálně tři typy code boxů (TabCodeBox, ProjectCodeBox a VirtualCodeBox)
    - a taky samozřejmě na začátku napsat, co to ten code box vůbec je
    - existuje pro ně společná třída jménem CodeBox (je to základ a definuje pro code boxy společné metody)
- typy code boxů - a ukázat jak vypadají - vše v jednom a oddělit nadpisy
- metody
- a ještě options


- ještě musím popsat, jak se přidávají files - co to jsou files
    - a asi i code views - prostě jak se s code boxem obecně pracuje



- budou tam popsané metody
    - to potom ale zkopíruju a ukážu i u každého code boxu, protože tam se někde mění návratový typ
- musím tam vysvětlit i CodeBoxCodeView a CodeBoxFile třídu
    - spíš ne, to bude v části o dalších komponentách - bude na to odkaz, tak na to můžou kliknou, pokud se chtějí dozvědět více
        - a je asi více pravděpodobné, že to lidi budou hledat tam
-->



<!--
    todo - přidat odkazy
    todo - neincludovat dev types do dist
    todo - nezapomenout na todo - zkusit naimportovat CSS core styles
    todo - dokumentační komentáře kdyžtak upravit podle dokumentace
    todo - potom u všech stránek projít odsazení a kdyžtak jej někde zvětšit
    todo - webpack přidat code splitting
    todo - potom v kódu projít úplně každou option a data atribut, a podívat se jestli jsem to do dokumentace napsal
    todo - u project code boxu popsat další data atributy (data-cb-folder...)
    todo - projít to a zkontrolovat, jestli jsem někde nenechal to class="no-highlight"

    Takže začátek mám. Co dál:
    X - Styling
        - ukázat jak nastylovat code view, tab code box a project code box - s příkladem - a možností přepnutí do "CSS" / "SCSS/LESS"
        - ukázat jaké jsou základní styly (také s možností přepínání - někde vpravo nahoře bude select)
    X - Code View
    X - Code Box
    X - Tab Code Box
    - Project Code Box
    - Virtual Code Box
    - Creators
    - a ještě asi udělat stránku o dalších komponentách - tam bude vysvětleno: HighlightBox, memento... (Other Components?)
-->